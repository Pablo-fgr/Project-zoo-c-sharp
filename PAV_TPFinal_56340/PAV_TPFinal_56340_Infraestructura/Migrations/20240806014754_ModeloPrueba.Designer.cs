// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PAV_TPFinal_56340_Infraestructura_Datos;

#nullable disable

namespace PAV_TPFinal_56340_Infraestructura_Datos.Migrations
{
    [DbContext(typeof(PavTpFinalContext))]
    [Migration("20240806014754_ModeloPrueba")]
    partial class ModeloPrueba
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PAV_TPFinal_56340_Dominio.Entidades.Animal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<Guid>("EspecieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PaisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Peso")
                        .HasColumnType("float");

                    b.Property<Guid>("SectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TipoAlimentacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EspecieId");

                    b.HasIndex("PaisId");

                    b.HasIndex("SectorId");

                    b.ToTable("Animales", (string)null);

                    b.HasDiscriminator<int>("TipoAlimentacion");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("PAV_TPFinal_56340_Dominio.Entidades.Empleado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Empleados", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("6f3ae0a3-c399-4cfd-b46d-452964c41ba5"),
                            Dni = "12345678",
                            Domicilio = "Tucumán",
                            Nombre = "Luis"
                        },
                        new
                        {
                            Id = new Guid("142286b8-1d89-4a02-9161-8448fc0faa77"),
                            Dni = "87654321",
                            Domicilio = "Tucumán",
                            Nombre = "María"
                        });
                });

            modelBuilder.Entity("PAV_TPFinal_56340_Dominio.Entidades.Especie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("PorcentajePesoCarne")
                        .HasColumnType("float");

                    b.Property<int>("TipoAlimentacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Especies", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("68b21844-5450-4308-8e91-f69c95f3d0e4"),
                            Codigo = 1,
                            Nombre = "León",
                            PorcentajePesoCarne = 0.69999999999999996,
                            TipoAlimentacion = 0
                        },
                        new
                        {
                            Id = new Guid("cf252142-47cb-4009-a4fe-07b9ed1acccd"),
                            Codigo = 2,
                            Nombre = "Jirafa",
                            PorcentajePesoCarne = 0.0,
                            TipoAlimentacion = 1
                        },
                        new
                        {
                            Id = new Guid("1f837e86-8df3-4966-883e-9097eacfa844"),
                            Codigo = 3,
                            Nombre = "Tigre",
                            PorcentajePesoCarne = 0.5,
                            TipoAlimentacion = 0
                        },
                        new
                        {
                            Id = new Guid("92d652f1-4179-43a2-928b-e3cd8250f5d0"),
                            Codigo = 4,
                            Nombre = "Rinoceronte",
                            PorcentajePesoCarne = 0.0,
                            TipoAlimentacion = 1
                        });
                });

            modelBuilder.Entity("PAV_TPFinal_56340_Dominio.Entidades.Pais", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Codigo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Paises", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bbe99c51-a00e-48b0-b227-c59d11682764"),
                            Codigo = 1,
                            Nombre = "Australia"
                        },
                        new
                        {
                            Id = new Guid("15946849-ef18-4e65-8af9-5bfd6d31bdd4"),
                            Codigo = 2,
                            Nombre = "Canadá"
                        },
                        new
                        {
                            Id = new Guid("4b532ae6-2b8c-449c-a4af-02aaf8d9b685"),
                            Codigo = 3,
                            Nombre = "Singapur"
                        },
                        new
                        {
                            Id = new Guid("f2de77ba-94bb-4b0c-af89-6a8db44c41a8"),
                            Codigo = 4,
                            Nombre = "Sudáfrica"
                        });
                });

            modelBuilder.Entity("PAV_TPFinal_56340_Dominio.Entidades.Sector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmpleadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Latitud")
                        .HasPrecision(10, 8)
                        .HasColumnType("float(10)");

                    b.Property<int>("Limite")
                        .HasColumnType("int");

                    b.Property<double>("Longitud")
                        .HasPrecision(10, 8)
                        .HasColumnType("float(10)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int>("TipoAlimentacion")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Sectores", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c204d5d8-9284-482b-b7e0-a6fd4297bb0d"),
                            EmpleadoId = new Guid("6f3ae0a3-c399-4cfd-b46d-452964c41ba5"),
                            Latitud = -26.250724000000002,
                            Limite = 10,
                            Longitud = -65.522827000000007,
                            Numero = 1,
                            TipoAlimentacion = 1
                        },
                        new
                        {
                            Id = new Guid("e9d7e1dc-b743-4364-8c49-e103625a547b"),
                            EmpleadoId = new Guid("6f3ae0a3-c399-4cfd-b46d-452964c41ba5"),
                            Latitud = -26.252358999999998,
                            Limite = 10,
                            Longitud = -65.521511000000004,
                            Numero = 2,
                            TipoAlimentacion = 0
                        },
                        new
                        {
                            Id = new Guid("84c872ab-d971-435e-aadf-934c881a137b"),
                            EmpleadoId = new Guid("142286b8-1d89-4a02-9161-8448fc0faa77"),
                            Latitud = -26.254660999999999,
                            Limite = 10,
                            Longitud = -65.522726000000006,
                            Numero = 3,
                            TipoAlimentacion = 1
                        },
                        new
                        {
                            Id = new Guid("8b1d8c9f-6fa8-49a5-8328-0135f9df0eb0"),
                            EmpleadoId = new Guid("142286b8-1d89-4a02-9161-8448fc0faa77"),
                            Latitud = -26.257249999999999,
                            Limite = 10,
                            Longitud = -65.523514000000006,
                            Numero = 4,
                            TipoAlimentacion = 0
                        });
                });

            modelBuilder.Entity("PAV_TPFinal_56340_Dominio.Entidades.Carnivoro", b =>
                {
                    b.HasBaseType("PAV_TPFinal_56340_Dominio.Entidades.Animal");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("PAV_TPFinal_56340_Dominio.Entidades.Herbivoro", b =>
                {
                    b.HasBaseType("PAV_TPFinal_56340_Dominio.Entidades.Animal");

                    b.Property<double>("ValorFijo")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("PAV_TPFinal_56340_Dominio.Entidades.Animal", b =>
                {
                    b.HasOne("PAV_TPFinal_56340_Dominio.Entidades.Especie", "Especie")
                        .WithMany()
                        .HasForeignKey("EspecieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PAV_TPFinal_56340_Dominio.Entidades.Pais", "PaisOrigen")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PAV_TPFinal_56340_Dominio.Entidades.Sector", "Sector")
                        .WithMany("Animales")
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Especie");

                    b.Navigation("PaisOrigen");

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("PAV_TPFinal_56340_Dominio.Entidades.Sector", b =>
                {
                    b.HasOne("PAV_TPFinal_56340_Dominio.Entidades.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("PAV_TPFinal_56340_Dominio.Entidades.Sector", b =>
                {
                    b.Navigation("Animales");
                });
#pragma warning restore 612, 618
        }
    }
}
